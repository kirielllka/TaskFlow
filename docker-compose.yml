services:
  redis:
    image: redis:latest
    container_name: redis_container
    command: redis-server --requirepass redis
    environment:
      - REDIS_PASSWORD=redis
    ports:
      - "6379:6379"
    volumes:
      - ./redisdata:/data
    networks:
      - backend
  db:
    image: postgres
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  web-app:
    build:
      context: .
    env_file:
      - .env
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"
    volumes:
      - ./apps/TaskFlow:/TaskFlow/apps/TaskFlow
    working_dir: /apps/TaskFlow
    networks:
      - backend
    command: >
      sh -c "python3 manage.py runserver 0.0.0.0:8000"

  worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
    networks:
      - backend
    depends_on:
      - rabbitmq


  rabbitmq:
    image: rabbitmq:3.10.7-management
    ports:
      - 5672:5672
      - 15672:15672
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=rabbit
      - RABBITMQ_DEFAULT_PASS=rabbit
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    networks:
      - backend

volumes:
  postgres_data:
  rabbitmq:

networks:
  backend:
    driver: bridge